/*
 * Copyright (c) 2018 Jim Schubert
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

import java.nio.file.Files
import java.nio.file.Paths

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.4.16"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

intellij {
    version '2017.3.3'
//    plugins 'coverage'
    pluginName 'intellij_openapi_generator'
    // This will replace the version defined in plugin.xml to whatever version is defined above as 'version'
    // (see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html)
    updateSinceUntilBuild false

//    version ideaVersion
//    downloadSources Boolean.valueOf(downloadIdeaSources)
//
    sandboxDirectory project.rootDir.canonicalPath + "/.sandbox"
}

publishPlugin {
    // File contents at ~/.gradle/config/intellij.properties
    // publishPlugin.username=username
    // publishPlugin.password=password
    if(Files.exists(Paths.get("${System.getProperty("user.home")}/.gradle/config/intellij.properties"))) {
        apply from: "${System.getProperty("user.home")}/.gradle/config/intellij.properties"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    compile("org.openapitools:openapi-generator:$openapiGeneratorVersion") {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.slf4j', module: 'slf4j-ext'
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

//idea {
//    project {
//        jdkName         = javaVersion
//        languageLevel   = javaVersion
//    }
//}
